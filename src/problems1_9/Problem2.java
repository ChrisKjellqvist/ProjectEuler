package problems1_9;

import java.util.ArrayList;

/**
 * Created by chris on 2/28/15.
 * Each new term in the Fibonacci sequence is generated by adding
 * the previous two terms. By starting with 1 and 2, the first 10 terms
 * will be:
 * <p/>
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * <p/>
 * By considering the terms in the Fibonacci sequence whose values do
 * not exceed four million, find the sum of the even-valued terms.
 */
public class Problem2 {
    public static void main(String[] args) {
        ArrayList<Integer> fibs = genFibonaccis(4000000);
        int sum = 0;
        for (int i = 0; i < fibs.size(); i++) {
            if (fibs.get(i) % 2 == 0) {
                sum += fibs.get(i);
            }
        }
        System.out.println(sum);
    }

    public static ArrayList<Integer> genFibonaccis(int lim) {
        ArrayList<Integer> list = new ArrayList<Integer>();
        list.add(1);
        list.add(2);
        while (list.get(list.size() - 1) + list.get(list.size() - 2) < lim) {
            list.add(list.get(list.size() - 1) + list.get(list.size() - 2));
        }
        return list;
    }
}
